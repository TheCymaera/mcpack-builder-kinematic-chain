import { Rect } from "./Rect.js";
import { Vector3 } from "./Vector3.js";
export declare class Matrix4 {
    m11: number;
    m12: number;
    m13: number;
    m14: number;
    m21: number;
    m22: number;
    m23: number;
    m24: number;
    m31: number;
    m32: number;
    m33: number;
    m34: number;
    m41: number;
    m42: number;
    m43: number;
    m44: number;
    private constructor();
    clone(): Matrix4;
    copy(other: Matrix4): this;
    set(m11: number, m12: number, m13: number, m14: number, m21: number, m22: number, m23: number, m24: number, m31: number, m32: number, m33: number, m34: number, m41: number, m42: number, m43: number, m44: number): this;
    identity(): this;
    isEqual(other: Matrix4): boolean;
    invert(): this;
    multiply(other: Matrix4): this;
    multiplyFrom(a: Matrix4, b: Matrix4): this;
    translate(translation: Vector3): this;
    scale(scale: Vector3): this;
    lookAt(eye: Vector3, center: Vector3, up: Vector3): this;
    perspective(fovy: number, aspect: number, near: number, far?: number): this;
    rotateX(radians: number): this;
    rotateY(radians: number): this;
    rotateZ(radians: number): this;
    static identity(): Matrix4;
    static ortho(rect: Rect, near?: number, far?: number): Matrix4;
    static translation(x: number, y: number, z: number): Matrix4;
    static rotationX(radians: number): Matrix4;
    static rotationY(radians: number): Matrix4;
    static rotationZ(radians: number): Matrix4;
    static rotationAxis(radians: number, axis: Vector3): Matrix4 | undefined;
}
