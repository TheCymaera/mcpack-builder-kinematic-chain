import { FileSystem } from "../../core/storage/FileSystem.js";
import { ReadonlyURI, URI } from "../../core/paths/URI.js";
/**
 * @experimental
 */
export declare class FSAFileSystem extends FileSystem {
    scheme: string;
    readonly handles: ReadonlyMap<string, FileSystemHandle>;
    readonly onRegisterHandle: Set<(event: {
        uri: ReadonlyURI;
    }) => any>;
    constructor(handles?: Map<string, FileSystemHandle>);
    registerHandle(authority: string, handle: FileSystemHandle): URI;
    availableAuthority(name: string): string;
    getURI(handle: FileSystemHandle): Promise<undefined | URI>;
    readFile(uri: ReadonlyURI): Promise<ArrayBuffer>;
    writeFile(uri: ReadonlyURI, content: ArrayBuffer): Promise<void>;
    createDirectory(uri: ReadonlyURI): Promise<void>;
    private _getFile;
    private _getDirectory;
    private _getRoot;
}
