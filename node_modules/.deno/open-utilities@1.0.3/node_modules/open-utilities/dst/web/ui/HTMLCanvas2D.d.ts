import { Circle } from "../../core/maths/Circle.js";
import { Path } from "../../core/maths/Path.js";
import { Color } from "../../core/ui/Color.js";
import { Atlas } from "./Atlas.js";
import { PathStyle } from "../../core/ui/PathStyle.js";
import { ShapeStyle } from "../../core/ui/ShapeStyle.js";
import { Matrix4 } from "../../core/maths/Matrix4.js";
import { Vector2 } from "../../core/maths/Vector2.js";
import { Rect } from "../../core/maths/Rect.js";
export declare class HTMLCanvas2D {
    #private;
    readonly ctx: CanvasRenderingContext2D;
    constructor(ctx: CanvasRenderingContext2D);
    static fromCanvas(canvas: HTMLCanvasElement): HTMLCanvas2D;
    static sampleCSSColor(colorString: string): Color;
    setTransform(transform: Matrix4): void;
    setBitmapDimensions(dimensions: Vector2): void;
    getClientInverseTransform(): Matrix4;
    clear(): void;
    clearRect(rect: Rect): void;
    drawLine(point1: Vector2, point2: Vector2, style: PathStyle): void;
    drawPath(path: Path, style: ShapeStyle): void;
    drawCircle(circle: Circle, style: ShapeStyle): void;
    drawRect(rect: Rect, style: ShapeStyle): void;
    /**
     * Use `drawImage` with ImageBitmap instead.
     * @deprecated
     */
    drawAtlas(rect: Rect, atlas: Atlas): void;
    drawImage(rect: Rect, bitmap: CanvasImageSource): void;
}
