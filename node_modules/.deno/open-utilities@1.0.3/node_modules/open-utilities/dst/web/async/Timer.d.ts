import { Disposable } from "../../core/memory/Disposable.js";
import { Duration } from "../../core/datetime/Duration.js";
/**
 * Timer
 */
export declare class Timer implements Disposable {
    private readonly _handle;
    dispose(): void;
    /**
     * Returns a promise that resolves after a specified duration.
     * @example
     * console.log("IE: I'll only take a moment.");
     * await Timer.delayed(new Duration({hour: 1}));
     * console.log("IE: Complete!");
     */
    static schedule(duration: Duration): Promise<unknown>;
    /**
     * Returns a repeating timer.
     * @example
     * Timer.periodic(new Duration({seconds: 1}), ()=>console.log("Tick"));
     */
    static periodic(duration: Duration, callback: (this: Timer) => any): Timer;
    private constructor();
}
